#!/bin/sh

usage () {
	echo "Usage:"
	echo "$0 vm-number"
	echo "Example:"
	echo "$0 vm1"
}

vm1 () {
	sysrc hostname=R1
	sysrc gateway_enable=NO
	sysrc ipv6_gateway_enable=NO
	sysrc ifconfig_em0=up
	sysrc cloned_interfaces=lagg0
	sysrc ifconfig_lagg0="laggproto loadbalance laggport em0 SYNCDHCP"
	sysrc ifconfig_lagg0_ipv6="inet6 accept_rtadv"
	sysrc quagga_enable=NO
	sysrc sshd_enable=yes
	sysrc ifconfig_em4="inet 192.168.56.11/24"
	ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
	echo "net.link.lagg.0.lacp.lacp_strict_mode=0" >> /etc/sysctl.conf
	config save
	hostname R1
	service netif restart
	service sysctl reload
	service routing restart
	service quagga onestop
	service sshd start
	echo "VM1 configured"
}

vm2 () {
sysrc hostname=R2
sysrc rtadvd_enable=YES
sysrc rtadvd_interfaces="em0"
sysrc ifconfig_em0="inet 10.0.12.2/24"
sysrc ifconfig_em0_ipv6="inet6 2001:db8:12::2 prefixlen 64"
sysrc ifconfig_em0_alias0="inet 10.0.12.254/32 vhid 1 pass testpass"
sysrc ifconfig_em0_alias1="inet6 2001:db8:12::fe prefixlen 128 vhid 1 pass testpass"
sysrc ifconfig_em1="inet 10.0.23.2/24"
sysrc ifconfig_em1_ipv6="inet6 2001:db8:23::2 prefixlen 64"
sysrc ifconfig_em4="inet 192.168.56.12/24"
sysrc quagga_daemons="zebra bgpd"
sysrc dhcprelya_enable=YES
sysrc dhcprelya_servers="10.0.3.3"
sysrc dhcprelya_ifaces="em0"
sysrc mpd_enable=YES
sysrc mpd_flags="-b -s ppp"
sysrc ngnetflow_enable=YES
sysrc ngnetflow_if=em0
sysrc ngnetflow_dst="10.0.12.1:2055"
sysrc ipsec_enable=YES
sysrc ipsec_file="/etc/ipsec.conf"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

mount -uw /
echo "carp_load="YES"" >> /boot/loader.conf.local
mount -ur /

cat > /usr/local/etc/mpd5/mpd.conf <<EOF
# Configuring a server PPTP VPN with tunnels to R4
default:
        load vpnipv4
        load vpnipv6
vpnipv4:
        # Create bundle called vpnipv4
        create bundle static vpnipv4
        # IP of client and server, on another subnet for avoiding problems
        set ipcp ranges 10.4.15.2/32 10.4.15.4/32
        # Remote LAN subnet
        set iface route 10.0.45.0/24
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv4 pptp
        # Attach this link to vpnipv4
        set link action bundle vpnipv4
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname "VpnLogin4"
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial -1
        # Local WAN IP addresse
        set pptp self 10.0.23.2
        # Remote WAN IP addresse
        set pptp peer 10.0.34.4
        # Allow incoming call
        set link enable incoming

vpnipv6:
        # Create bundle called vpnipv6
        create bundle static vpnipv6
        # Don't know how to disable IPv4 ipcp
        set ipcp ranges 10.6.15.2/32 10.6.15.4/32
        # Enable IPv6
        set bundle enable ipv6cp
        # Remote LAN subnet
        set iface route 2001:db8:45::/64
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv6 pptp
        # Attach this link to vpnipv6
        set link action bundle vpnipv6
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname "VpnLogin6"
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial -1
        # Local WAN IP addresse
        set pptp self 2001:db8:23::2
        # Remote WAN IP addresse
        set pptp peer 2001:db8:34::4
        # Allow incoming call
        set link enable incoming
EOF

cat > /usr/local/etc/mpd5/mpd.secret <<EOF
VpnLogin4       VpnPassword4
VpnLogin6       VpnPassword6
EOF

cat > /etc/ipsec.conf <<EOF
flush ;
add 10.0.23.2 10.0.23.3 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 10.0.23.3 10.0.23.2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::2 2001:db8:23::3 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::3 2001:db8:23::2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
EOF

cat > /usr/local/etc/quagga/bgpd.conf <<EOF
router bgp 100
 bgp router-id 0.0.0.0
 network 10.0.12.0/24
 neighbor 10.0.23.3 remote-as 100
 neighbor 2001:db8:23::3 remote-as 100
 no neighbor 2001:db8:23::3 activate
!
 address-family ipv6
 network 2001:db8:12::/64
 neighbor 2001:db8:23::3 activate
 exit-address-family
EOF

config save
hostname R2
kldload carp
service netif restart
service ipsec start
service rtadvd start
service quagga restart
service dhcprelya start
service mpd5 start
service ngnetflow start
echo "VM2 configured"

}

vm3 () {
sysrc hostname=R3
sysrc ifconfig_em1="inet 10.0.23.3/24"
sysrc ifconfig_em2="inet 10.0.34.3/24"
sysrc ifconfig_em1_ipv6="inet6 2001:db8:23::3 prefixlen 64"
sysrc ifconfig_em2_ipv6="inet6 2001:db8:34::3 prefixlen 64"
sysrc cloned_interfaces="lo1"
sysrc ifconfig_lo1="inet 10.0.3.3/24"
sysrc ifconfig_lo1_ipv6="inet6 2001:db8:3::3 prefixlen 64"
sysrc ifconfig_em4="inet 192.168.56.13/24"
sysrc quagga_enable=YES
sysrc quagga_daemons="zebra bgpd ospfd ospf6d"
sysrc dhcpd_enable=YES
sysrc dhcpd_flags="-q"
sysrc dhcpd_conf="/usr/local/etc/dhcpd.conf"
sysrc pf_enable=YES
sysrc pf_rules="/etc/pf.conf"
sysrc ipsec_enable=YES
sysrc ipsec_file="/etc/ipsec.conf"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

cat > /etc/pf.conf <<EOF
#Variables definitions
TO_R2_if = "{" vtnet1 em1 "}"
TO_R4_if = "{" vtnet2 em2 "}"
R2 = "10.0.23.2/32"
R4 = "10.0.34.4/32"

## ALTQ rules
# Queue outgoing from \$TO_R4_if (R2 => R4)
# Rate-limit VPN traffic to 64Kb
altq on \$TO_R4_if hfsc bandwidth 100Mb queue { VPN4_TO_R4, OTHER_TO_R4 }
queue VPN4_TO_R4 bandwidth 64Kb hfsc(upperlimit 64Kb)
queue OTHER_TO_R4 bandwidth 99Mb hfsc(default)

# Queue for outgoing traffic from \$TO_R2_if (R4 => R2)
altq on \$TO_R2_if hfsc bandwidth 100Mb queue { VPN4_TO_R2, OTHER_TO_R2 }
queue VPN4_TO_R2 bandwidth 64Kb hfsc(upperlimit 64Kb)
queue OTHER_TO_R2 bandwidth 99Mb hfsc(default)

## PF rules

# R2 => R4
# Shapping works on outgoing traffic only, but need to 'mark' traffic
# entering the interface for putting returning traffic in the good queue
pass in quick on \$TO_R2_if proto gre from \$R2 to \$R4 queue VPN4_TO_R2
# Apply ALTQ to traffic that get out from \$TO_R4_if
pass out quick on \$TO_R4_if proto gre from \$R2 to \$R4 queue VPN4_TO_R4

# PF rules R4 => R2
pass in quick on \$TO_R4_if proto gre from \$R4 to \$R2 queue VPN4_TO_R4
pass out quick on \$TO_R2_if proto gre from \$R4 to \$R2 queue VPN4_TO_R2
EOF

cat > /usr/local/etc/dhcpd.conf <<EOF
option domain-name "bsdrp.net";
default-lease-time 600;
max-lease-time 7200;
ddns-update-style none;
#Declare loopback network
subnet 10.0.3.0 netmask 255.255.255.0 {
}
#Declare em1/vtnet1 network
subnet 10.0.23.0 netmask 255.255.255.0 {
}
#Declare em2/vtnet2 network
subnet 10.0.34.0 netmask 255.255.255.0 {
}
#Declare R1 LAN and gateway
subnet 10.0.12.0 netmask 255.255.255.0 {
  range 10.0.12.1 10.0.12.1;
  option routers 10.0.12.254;
}
#Declare R5 subnet and gateway
subnet 10.0.45.0 netmask 255.255.255.0 {
  range 10.0.45.5 10.0.45.5;
  option routers 10.0.45.254;
}
EOF

cat > /etc/ipsec.conf <<EOF
flush ;
add 10.0.23.2 10.0.23.3 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 10.0.23.3 10.0.23.2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::2 2001:db8:23::3 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::3 2001:db8:23::2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
EOF

cat > /usr/local/etc/quagga/ospfd.conf <<EOF
interface em2
 ip ospf message-digest-key 1 md5 superpass
!
interface vtnet2
 ip ospf message-digest-key 1 md5 superpass
!
router ospf
 ospf router-id 0.0.0.3
 passive-interface em1
 passive-interface vtnet1
 network 10.0.3.0/24 area 0.0.0.0
 network 10.0.23.0/24 area 0.0.0.0
 network 10.0.34.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
EOF

cat > /usr/local/etc/quagga/ospf6d.conf <<EOF
debug ospf6 lsa unknown
!
interface em1
 ipv6 ospf6 passive
 ipv6 ospf6 network broadcast
!
interface em2
 ipv6 ospf6 network broadcast
!
interface lo1
 ipv6 ospf6 network broadcast
!
interface vtnet1
 ipv6 ospf6 passive
 ipv6 ospf6 network broadcast
!
interface vtnet2
 ipv6 ospf6 network broadcast
!
router ospf6
 router-id 0.0.0.3
 interface vtnet2 area 0.0.0.0
 interface vtnet1 area 0.0.0.0
 interface em2 area 0.0.0.0
 interface em1 area 0.0.0.0
 interface lo1 area 0.0.0.0
EOF

cat > /usr/local/etc/quagga/bgpd.conf <<EOF
router bgp 100
 bgp router-id 0.0.0.0
 network 10.0.3.0/24
 network 10.0.34.0/24
 neighbor 10.0.23.2 remote-as 100
 neighbor 2001:db8:23::2 remote-as 100
 no neighbor 2001:db8:23::2 activate
!
 address-family ipv6
 network 2001:db8:3::/64
 network 2001:db8:34::/64
 neighbor 2001:db8:23::2 activate
 exit-address-family
EOF

config save
hostname R3
service netif restart
service ipsec start
service quagga restart
service isc-dhcpd start
service pf start
echo "VM3 configured"

}

vm4 () {
sysrc hostname=R4
sysrc rtadvd_enable=YES
sysrc rtadvd_interfaces=em3
sysrc ifconfig_em3="inet 10.0.45.4/24"
sysrc ifconfig_em3_ipv6="inet6 2001:db8:45::4 prefixlen 64"
sysrc ifconfig_em2="10.0.34.4/24"
sysrc ifconfig_em2_ipv6="inet6 2001:db8:34::4 prefixlen 64"
sysrc ifconfig_em4="inet 192.168.56.14/24"
sysrc quagga_enable=NO
sysrc bird_enable=YES
sysrc bird6_enable=YES
sysrc freevrrpd_enable=YES
sysrc dhcprelya_enable=YES
sysrc dhcprelya_servers=10.0.3.3
sysrc dhcprelya_ifaces=em3
sysrc mpd_enable=YES
sysrc mpd_flags="-b -s ppp"
sysrc firewall_enable=YES
sysrc firewall_script="/etc/ipfw.rules"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

cat > /usr/local/etc/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 0.0.0.4;

# Sync bird routing table with kernel
protocol kernel {
        export all;
}

# Include device route (warning, a device route is a /32)
protocol device {
        scan time 10;
}

# Include directly connected network
protocol direct {
        interface "vtnet3", "em3";
}

protocol ospf R4 {
        export all;
        rfc1583compat yes;
        area 0.0.0.0 {
                interface "vtnet2","em2" {
                        cost 10;
                        type broadcast;
                        passwords {
                               password "superpass" {
                                       id 1;
                               };
                       };
                       authentication cryptographic;
                };
        };
}
EOF

cat > /usr/local/etc/bird6.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird6.log" all;
log stderr all;

# Override router ID
router id 0.0.0.4;

# Sync bird routing table with kernel
protocol kernel {
        #import all;
        export all;
}

protocol device {
        scan time 10;
}
protocol direct {
        interface "vtnet3","em3";
}
protocol ospf R4 {
        export all;
        rfc1583compat yes;
        area 0.0.0.0 {
                interface "vtnet2","em2" {
                        cost 10;
                        type broadcast;
                };
        };
}
EOF

cat > /usr/local/etc/mpd5/mpd.conf <<EOF
default:
        load vpnipv4
        load vpnipv6
vpnipv4:
        # Create bundle called vpnipv4
        create bundle static vpnipv4
        # Getting IP from the server
        set ipcp ranges 0.0.0.0/0
        # Remote LAN subnet
        set iface route 10.0.12.0/24
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv4 pptp
        # Attach this link to vpnipv4
        set link action bundle vpnipv4
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname VpnLogin4
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial 0
        # Local WAN IP addresse
        set pptp self 10.0.34.4
        # Remote WAN IP addresse
        set pptp peer 10.0.23.2
        # Open (initiate) the link to the server
        open
vpnipv6:
        # Create bundle called vpnipv6
        create bundle static vpnipv6
        # Getting IP from the server
        set ipcp ranges 0.0.0.0/0
        # Enable IPv6
        set bundle enable ipv6cp
        # Remote LAN subnet
        set iface route 2001:db8:12::/64
        # Create a static pptp link called lvpnipv6
        create link static lvpnipv6 pptp
        # Attach this link to vpnipv6
        set link action bundle vpnipv6
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname VpnLogin6
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial 0
        # Local WAN IP addresse
        set pptp self 2001:db8:34::4
        # Remote WAN IP addresse
        set pptp peer 2001:db8:23::2
        # Open (initiate) the link to the server
        open
EOF

cat > /usr/local/etc/mpd5/mpd.secret <<EOF
VpnLogin4       VpnPassword4
VpnLogin6       VpnPassword6
EOF

cat > /usr/local/etc/freevrrpd.conf <<EOF
[VRID]
serverid = 1
interface = em3
# We want that this router is the master
priority = 101
addr = 10.0.45.254/24
password = vrid1
EOF

ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /usr/local/etc/freevrrpd.conf

echo "# IPFW we need to let it to pass IPv6 Unknown Extension Header for IPv6 PPTP" >> /etc/sysctl.conf
echo "net.inet6.ip6.fw.deny_unknown_exthdrs=0" >> /etc/sysctl.conf

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
if ! kldstat -q -m dummynet; then
        kldload dummynet
fi

# Flush out the list before we begin.
\${fwcmd} -f flush
#Need to reduce the default queue size too
#explanation on chapter "7.2.1.        Pipe Queues"
#http://www.freebsd-howto.com/HOWTO/Ipfw-HOWTO
\${fwcmd} pipe 10 config bw 128Kbit/s queue 10Kbytes
\${fwcmd} pipe 20 config bw 128Kbit/s queue 10Kbytes
#Traffic getting out vtnet2, is VPN PPTP traffic
\${fwcmd} add 1000 pipe 10 all from 2001:db8:34::4 to 2001:db8:23::2 out via any
#Traffic getting out em3, is clear traffic
\${fwcmd} add 2000 pipe 20 all from 2001:db8:12::/64 to 2001:db8:45::/64 out via any
#We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

config save
hostname R4
service netif restart
service rtadvd start
service bird start
service bird6 start
service mpd5 start
service dhcprelya start
service freevrrpd start
service ipfw start
service sysctl reload
echo "VM4 configured"
}

vm5 () {
sysrc hostname=R5
sysrc ifconfig_em3="up"
sysrc cloned_interfaces="lagg0"
sysrc ifconfig_lagg0="laggproto failover laggport em3 SYNCDHCP"
sysrc ifconfig_lagg0_ipv6="inet6 accept_rtadv"
sysrc ifconfig_em4="inet 192.168.56.15/24"
sysrc bsnmpd_enable=YES
sysrc quagga_enable=NO
sysrc gateway_enable=NO
sysrc ipv6_gateway_enable=NO
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
config save
hostname R5
service netif restart
service routing restart
service quagga onestop
service bsnmpd start
echo "VM5 configured"
}

### Main

[ $# -lt 1 ] && usage

$1
